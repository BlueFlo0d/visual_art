cmake_minimum_required (VERSION 2.8)
if(APPLE)
 cmake_policy(SET CMP0042 OLD)#...
endif(APPLE)
set(CMAKE_BUILD_TYPE Release CACHE STRING "Release build.")
#set(CMAKE_BUILD_TYPE Debug CACHE STRING "Debug build.")
project (QtVM)
set(CMAKE_C_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_C_FLAGS_DEBUG "-O0 -g")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
 set(CMAKE_C_FLAGS_RELEASE "-Ofast")
 set(CMAKE_CXX_FLAGS_RELEASE "-Ofast")
endif()
set(TBB_LIBS tbb tbbmalloc)
find_library(TBB_MPROXY tbbmalloc_proxy)
if(TBB_MPROXY)
 set(TBB_LIBS ${TBB_LIBS} tbbmalloc_proxy)
endif(TBB_MPROXY)
find_library(CHECK_TBB_LIBS ${TBB_LIBS})
if(CHECK_TBB_LIBS)
 message(status " TBB_LIBS is ${CHECK_TBB_LIBS}")
else(CHECK_TBB_LIBS)
 message(FATAL_ERROR " No TBB (Thread Building Blocks) Library found.")
endif(CHECK_TBB_LIBS)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++11 -Wc++11-narrowing")
find_package(OpenCV REQUIRED)
aux_source_directory(. WKDIR_SRCS)
add_executable(main ${WKDIR_SRCS})
target_link_libraries(main ${OpenCV_LIBS} ${TBB_LIBS})
